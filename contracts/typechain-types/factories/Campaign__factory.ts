/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../common";
import type { Campaign, CampaignInterface } from "../Campaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_image",
        type: "string",
      },
      {
        internalType: "int256",
        name: "_targetAmount",
        type: "int256",
      },
      {
        internalType: "string",
        name: "_endDate",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "currentAmount",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "image",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetAmount",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactions",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526000600555600060065560405162000f0538038062000f0583398181016040528101906200003391906200029b565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460019081620000849190620005ea565b508360029081620000969190620005ea565b508260039081620000a89190620005ea565b50816004819055508060079081620000c19190620005ea565b505050505050620006d1565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200013682620000eb565b810181811067ffffffffffffffff82111715620001585762000157620000fc565b5b80604052505050565b60006200016d620000cd565b90506200017b82826200012b565b919050565b600067ffffffffffffffff8211156200019e576200019d620000fc565b5b620001a982620000eb565b9050602081019050919050565b60005b83811015620001d6578082015181840152602081019050620001b9565b60008484015250505050565b6000620001f9620001f38462000180565b62000161565b905082815260208101848484011115620002185762000217620000e6565b5b62000225848285620001b6565b509392505050565b600082601f830112620002455762000244620000e1565b5b815162000257848260208601620001e2565b91505092915050565b6000819050919050565b620002758162000260565b81146200028157600080fd5b50565b60008151905062000295816200026a565b92915050565b600080600080600060a08688031215620002ba57620002b9620000d7565b5b600086015167ffffffffffffffff811115620002db57620002da620000dc565b5b620002e9888289016200022d565b955050602086015167ffffffffffffffff8111156200030d576200030c620000dc565b5b6200031b888289016200022d565b945050604086015167ffffffffffffffff8111156200033f576200033e620000dc565b5b6200034d888289016200022d565b9350506060620003608882890162000284565b925050608086015167ffffffffffffffff811115620003845762000383620000dc565b5b62000392888289016200022d565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003f257607f821691505b602082108103620004085762000407620003aa565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004727fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000433565b6200047e868362000433565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004cb620004c5620004bf8462000496565b620004a0565b62000496565b9050919050565b6000819050919050565b620004e783620004aa565b620004ff620004f682620004d2565b84845462000440565b825550505050565b600090565b6200051662000507565b62000523818484620004dc565b505050565b5b818110156200054b576200053f6000826200050c565b60018101905062000529565b5050565b601f8211156200059a5762000564816200040e565b6200056f8462000423565b810160208510156200057f578190505b620005976200058e8562000423565b83018262000528565b50505b505050565b600082821c905092915050565b6000620005bf600019846008026200059f565b1980831691505092915050565b6000620005da8383620005ac565b9150826002028217905092915050565b620005f5826200039f565b67ffffffffffffffff811115620006115762000610620000fc565b5b6200061d8254620003d9565b6200062a8282856200054f565b600060209050601f8311600181146200066257600084156200064d578287015190505b620006598582620005cc565b865550620006c9565b601f19841662000672866200040e565b60005b828110156200069c5784890151825560018201915060208501945060208101905062000675565b86831015620006bc5784890151620006b8601f891682620005ac565b8355505b6001600288020188555050505b505050505050565b61082480620006e16000396000f3fe60806040526004361061008a5760003560e01c8063953b8fb811610059578063953b8fb81461014f578063c24a0f8b1461017a578063ed88c68e146101a5578063f3ccaac0146101af578063f441b1c8146101da57610099565b806306fdde03146100a357806318015191146100ce5780637284e416146100f95780638da5cb5b1461012457610099565b3661009957610097610205565b005b6100a1610205565b005b3480156100af57600080fd5b506100b86102cb565b6040516100c591906105c9565b60405180910390f35b3480156100da57600080fd5b506100e3610359565b6040516100f09190610604565b60405180910390f35b34801561010557600080fd5b5061010e61035f565b60405161011b91906105c9565b60405180910390f35b34801561013057600080fd5b506101396103ed565b6040516101469190610660565b60405180910390f35b34801561015b57600080fd5b50610164610411565b6040516101719190610604565b60405180910390f35b34801561018657600080fd5b5061018f610417565b60405161019c91906105c9565b60405180910390f35b6101ad610205565b005b3480156101bb57600080fd5b506101c46104a5565b6040516101d191906105c9565b60405180910390f35b3480156101e657600080fd5b506101ef610533565b6040516101fc9190610604565b60405180910390f35b60003411610248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023f906106c7565b60405180910390fd5b346005600082825461025a9190610716565b925050819055506001600660008282546102749190610716565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c52346040516102c19190610773565b60405180910390a2565b600180546102d8906107bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610304906107bd565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b505050505081565b60065481565b6002805461036c906107bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610398906107bd565b80156103e55780601f106103ba576101008083540402835291602001916103e5565b820191906000526020600020905b8154815290600101906020018083116103c857829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60078054610424906107bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610450906107bd565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b505050505081565b600380546104b2906107bd565b80601f01602080910402602001604051908101604052809291908181526020018280546104de906107bd565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b505050505081565b60055481565b600081519050919050565b600082825260208201905092915050565b60005b83811015610573578082015181840152602081019050610558565b60008484015250505050565b6000601f19601f8301169050919050565b600061059b82610539565b6105a58185610544565b93506105b5818560208601610555565b6105be8161057f565b840191505092915050565b600060208201905081810360008301526105e38184610590565b905092915050565b6000819050919050565b6105fe816105eb565b82525050565b600060208201905061061960008301846105f5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064a8261061f565b9050919050565b61065a8161063f565b82525050565b60006020820190506106756000830184610651565b92915050565b7f446f6e6174696f6e206d7573742062652067726561746572207468616e203000600082015250565b60006106b1601f83610544565b91506106bc8261067b565b602082019050919050565b600060208201905081810360008301526106e0816106a4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610721826105eb565b915061072c836105eb565b925082820190508281121560008312168382126000841215161715610754576107536106e7565b5b92915050565b6000819050919050565b61076d8161075a565b82525050565b60006020820190506107886000830184610764565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107d557607f821691505b6020821081036107e8576107e761078e565b5b5091905056fea2646970667358221220ce8ddee107dad504acc4635d034fed24e1a99efc38d00762c365a1018780951f64736f6c63430008180033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _description: string,
    _image: string,
    _targetAmount: BigNumberish,
    _endDate: string,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _description,
      _image,
      _targetAmount,
      _endDate,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _description: string,
    _image: string,
    _targetAmount: BigNumberish,
    _endDate: string,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _description,
      _image,
      _targetAmount,
      _endDate,
      overrides || {}
    ) as Promise<
      Campaign & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Campaign__factory {
    return super.connect(runner) as Campaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new Interface(_abi) as CampaignInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Campaign {
    return new Contract(address, _abi, runner) as unknown as Campaign;
  }
}
